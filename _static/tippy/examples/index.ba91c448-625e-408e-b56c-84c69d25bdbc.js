selector_to_html = {"a[href=\"notebooks/batch_helpers.html#selectively-remove-rows-by-index\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">2.3. </span>Selectively remove rows by index<a class=\"headerlink\" href=\"#selectively-remove-rows-by-index\" title=\"Link to this heading\">#</a></h2><p>Create a list of indices to remove. You can do this manually</p><p>Some useful ways to create a list:</p>", "a[href=\"notebooks/segmentation.html#get-values-for-k-and-gsig\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">4.3. </span>Get values for K and gSig<a class=\"headerlink\" href=\"#get-values-for-k-and-gsig\" title=\"Link to this heading\">#</a></h2><p><code class=\"docutils literal notranslate\"><span class=\"pre\">get_single_patch_coords()</span></code> takes your image dimensions and strides/overlaps values from registration to show you a single patch of your movie.</p><p>Use the last parameter, <code class=\"docutils literal notranslate\"><span class=\"pre\">patch_index</span></code>, to select a patch with activity. This can be a list [] or tuple (), of the row/column you want to select.</p>", "a[href=\"notebooks/assembly.html#initialize-a-scanreader-object\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">1.2. </span>Initialize a scanreader object<a class=\"headerlink\" href=\"#initialize-a-scanreader-object\" title=\"Link to this heading\">#</a></h2><p>(Option 1). Simply pass a string containing a wildcard pattern for files to gather</p>", "a[href=\"notebooks/batch_helpers.html#remove-rows-with-no-output-accidental-entries\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">2.2. </span>Remove rows with no output (accidental entries)<a class=\"headerlink\" href=\"#remove-rows-with-no-output-accidental-entries\" title=\"Link to this heading\">#</a></h2>", "a[href=\"notebooks/motion_correction.html#data-path-and-batch-setup\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">3.1. </span>Data path and batch setup<a class=\"headerlink\" href=\"#data-path-and-batch-setup\" title=\"Link to this heading\">#</a></h2><p>We set 2 path variables:</p>", "a[href=\"notebooks/batch_helpers.html#change-correct-input-movie-path\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">2.6. </span>Change/correct <code class=\"docutils literal notranslate\"><span class=\"pre\">input_movie_path</span></code><a class=\"headerlink\" href=\"#change-correct-input-movie-path\" title=\"Link to this heading\">#</a></h2>", "a[href=\"#tutorial\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Tutorial<a class=\"headerlink\" href=\"#tutorial\" title=\"Link to this heading\">#</a></h1><p>Below are <a class=\"reference external\" href=\"https://github.com/MillerBrainObservatory/LBM-CaImAn-Python/tree/master/demos/notebooks\">example notebooks</a> that will walk you through the full processing pipeline.</p><p>To download these notebooks:</p>", "a[href=\"notebooks/segmentation.html#plot-cnmf-components\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">4.8. </span>Plot CNMF Components<a class=\"headerlink\" href=\"#plot-cnmf-components\" title=\"Link to this heading\">#</a></h2><p><code class=\"docutils literal notranslate\"><span class=\"pre\">lcp.plot_cnmf_components(df,</span> <span class=\"pre\">marker_size=3)</span></code> plots the <strong>estimates produced by CaImAn</strong></p><p>This is essentially a small region around each \u201cneuron\u201d, or what CaImAn considers a neuron.</p>", "a[href=\"notebooks/segmentation.html#pick-the-best-parameter-set\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">4.16. </span>Pick the best parameter set<a class=\"headerlink\" href=\"#pick-the-best-parameter-set\" title=\"Link to this heading\">#</a></h2>", "a[href=\"notebooks/motion_correction.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">3. </span>Registration<a class=\"headerlink\" href=\"#registration\" title=\"Link to this heading\">#</a></h1><p>Correct for rigid/non-rigid movement</p>", "a[href=\"notebooks/segmentation.html#checking-for-an-errors\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">4.6. </span>Checking for an errors<a class=\"headerlink\" href=\"#checking-for-an-errors\" title=\"Link to this heading\">#</a></h2><p>After a batch run, check the results to make sure the outputs do not contain a \u201ctraceback\u201d error.</p><p>An error-free processing run will yield \u201cNone\u201d in the cell below. Otherwise, an error will be printed.</p>", "a[href=\"notebooks/segmentation.html#parameter-gridsearch\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">4.14. </span>Parameter Gridsearch<a class=\"headerlink\" href=\"#parameter-gridsearch\" title=\"Link to this heading\">#</a></h2><p>Once you have a close approximation for a value of <code class=\"docutils literal notranslate\"><span class=\"pre\">K</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">rf</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">stride</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">gSig</span></code>, we can further tune these values with a grid-search.</p>", "a[href=\"notebooks/segmentation.html#run-the-cnmf-batch-items\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">4.15. </span>Run the <code class=\"docutils literal notranslate\"><span class=\"pre\">cnmf</span></code> batch items<a class=\"headerlink\" href=\"#run-the-cnmf-batch-items\" title=\"Link to this heading\">#</a></h2>", "a[href=\"notebooks/batch_helpers.html#manage-batch-and-dataframe-filepath-locations\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">2.1. </span>Manage batch and dataframe filepath locations<a class=\"headerlink\" href=\"#manage-batch-and-dataframe-filepath-locations\" title=\"Link to this heading\">#</a></h2>", "a[href=\"notebooks/batch_helpers.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">2. </span>Batch Helpers<a class=\"headerlink\" href=\"#batch-helpers\" title=\"Link to this heading\">#</a></h1><p>A notebook to help manage batch results</p>", "a[href=\"notebooks/segmentation.html#evaluate-cnmf-outputs\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">4.7. </span>Evaluate CNMF outputs<a class=\"headerlink\" href=\"#evaluate-cnmf-outputs\" title=\"Link to this heading\">#</a></h2><p>Similar to mcorr, you can use the <code class=\"docutils literal notranslate\"><span class=\"pre\">mesmerize-core</span></code> API to fetch the outputs.</p><p><a class=\"reference external\" href=\"https://mesmerize-core.readthedocs.io/en/latest/api/cnmf.html\">API reference for mesmerize-CNMF</a>\n<a class=\"reference external\" href=\"https://caiman.readthedocs.io/en/latest/Getting_Started.html#parameters\">API reference for caiman-CNMF</a></p>", "a[href=\"notebooks/segmentation.html#run-the-cnmf-algorithm\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">4.5. </span>Run the CNMF algorithm<a class=\"headerlink\" href=\"#run-the-cnmf-algorithm\" title=\"Link to this heading\">#</a></h2><p>The API is identical to running mcorr.</p><p>You can provide the mcorr item row to <code class=\"docutils literal notranslate\"><span class=\"pre\">input_movie_path</span></code> and it will resolve the path of the input movie from the entry in the DataFrame.</p>", "a[href=\"notebooks/motion_correction.html#grid-search-for-best-parameters\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">3.4. </span>Grid-search for best parameters<a class=\"headerlink\" href=\"#grid-search-for-best-parameters\" title=\"Link to this heading\">#</a></h2><h3><span class=\"section-number\">3.4.1. </span><code class=\"docutils literal notranslate\"><span class=\"pre\">scale_factor</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">gSig_filt</span></code><a class=\"headerlink\" href=\"#scale-factor-and-gsig-filt\" title=\"Link to this heading\">#</a></h3><p>If you still see non-rigid motion in your movie, we can try increasing the <code class=\"docutils literal notranslate\"><span class=\"pre\">scale_factor</span></code> to increase our patch-size or decrease it.</p><p>More than likely you will want to decrease the scale factor to process more patches.</p>", "a[href=\"notebooks/motion_correction.html#apply-the-best-parameters-to-remaining-files\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">3.6. </span>Apply the \u2018best parameters\u2019 to remaining files<a class=\"headerlink\" href=\"#apply-the-best-parameters-to-remaining-files\" title=\"Link to this heading\">#</a></h2><p>When you decide which parameter set works the best, we keep it and delete the other batch items.</p><p>Remove batch items (i.e. rows) using <code class=\"docutils literal notranslate\"><span class=\"pre\">df.caiman.remove_item(&lt;item_uuid&gt;)</span></code>. This also cleans up the output data in the batch directory.</p>", "a[href=\"notebooks/segmentation.html#patches-are-tiny\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">4.11. </span>Patches are tiny!<a class=\"headerlink\" href=\"#patches-are-tiny\" title=\"Link to this heading\">#</a></h2><p>There was an error in how we set up our patches.</p>", "a[href=\"notebooks/motion_correction.html#evaluate-results\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">3.5. </span>Evaluate results<a class=\"headerlink\" href=\"#evaluate-results\" title=\"Link to this heading\">#</a></h2><h3><span class=\"section-number\">3.5.1. </span>Summary statistics<a class=\"headerlink\" href=\"#summary-statistics\" title=\"Link to this heading\">#</a></h3><p>You can evaluate some basic statistics like mean, median, and percentiles of each item in your batch results.</p><p>It is possible that parameter sets you used for your grid-search yield the same output movie (i.e. overlaps of (2, 2) and (3, 3) likely yield the same result).</p>", "a[href=\"notebooks/collation.html#id1\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">5.6. </span>2. Align each plane to the reference plane<a class=\"headerlink\" href=\"#id1\" title=\"Link to this heading\">#</a></h2>", "a[href=\"notebooks/segmentation.html#rerun-cnmf\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">4.12. </span>Rerun CNMF<a class=\"headerlink\" href=\"#rerun-cnmf\" title=\"Link to this heading\">#</a></h2>", "a[href=\"notebooks/segmentation.html#evaluate-cnmf-results\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">4.13. </span>Evaluate CNMF Results<a class=\"headerlink\" href=\"#evaluate-cnmf-results\" title=\"Link to this heading\">#</a></h2><p>The next step is to adjust evaluation parameters, <code class=\"docutils literal notranslate\"><span class=\"pre\">min_SNR</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">rval_thr</span></code> (and <code class=\"docutils literal notranslate\"><span class=\"pre\">cnn_thr</span></code> if you used <code class=\"docutils literal notranslate\"><span class=\"pre\">use_cnn=True</span></code>).</p><p>These parameters <strong>will not compensate for poorly-calculated initialization parameters</strong>.</p>", "a[href=\"notebooks/segmentation.html#set-new-parameters\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">4.4. </span>Set new parameters<a class=\"headerlink\" href=\"#set-new-parameters\" title=\"Link to this heading\">#</a></h2>", "a[href=\"notebooks/collation.html#get-outputs-for-each-z-plane\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">5.1. </span>Get outputs for each z-plane<a class=\"headerlink\" href=\"#get-outputs-for-each-z-plane\" title=\"Link to this heading\">#</a></h2>", "a[href=\"notebooks/batch_helpers.html#convert-intermediate-mmmap-to-zarr\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">2.7. </span>Convert intermediate <code class=\"docutils literal notranslate\"><span class=\"pre\">.mmmap</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">.zarr</span></code><a class=\"headerlink\" href=\"#convert-intermediate-mmmap-to-zarr\" title=\"Link to this heading\">#</a></h2><p>TODO: Move these to a separate \u2018helpers\u2019 notebook as they aren\u2019t related specifically to batch management</p>", "a[href=\"notebooks/assembly.html#input-data-path-to-your-raw-tiff-file-s\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">1.1. </span>Input data: Path to your raw .tiff file(s)<a class=\"headerlink\" href=\"#input-data-path-to-your-raw-tiff-file-s\" title=\"Link to this heading\">#</a></h2><p>Before processing, ensure:</p>", "a[href=\"notebooks/collation.html#align-each-plane-to-the-reference-plane\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">5.5. </span>1. Align each plane to the reference plane<a class=\"headerlink\" href=\"#align-each-plane-to-the-reference-plane\" title=\"Link to this heading\">#</a></h2>", "a[href=\"notebooks/segmentation.html#data-path-setup\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">4.1. </span>Data path setup<a class=\"headerlink\" href=\"#data-path-setup\" title=\"Link to this heading\">#</a></h2><p>Data setup is similar to <a class=\"reference internal\" href=\"notebooks/motion_correction.html\"><span class=\"std std-doc\">motion_correction notebook</span></a>.</p>", "a[href=\"notebooks/collation.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">5. </span>Collate Planes<a class=\"headerlink\" href=\"#collate-planes\" title=\"Link to this heading\">#</a></h1><p>In this notebook, we merge CNMF results across each of our z-planes.</p>", "a[href=\"notebooks/segmentation.html#cnmf-parameters\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">4.2. </span>CNMF Parameters<a class=\"headerlink\" href=\"#cnmf-parameters\" title=\"Link to this heading\">#</a></h2><p>In this section, we\u2019ll define a <code class=\"docutils literal notranslate\"><span class=\"pre\">parameters</span></code> object that will subsequently be used to initialize our different estimators.</p>", "a[href=\"notebooks/collation.html#total-number-of-neurons\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">5.2. </span>Total number of Neurons<a class=\"headerlink\" href=\"#total-number-of-neurons\" title=\"Link to this heading\">#</a></h2>", "a[href=\"notebooks/batch_helpers.html#change-the-item-name\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">2.5. </span>Change the <code class=\"docutils literal notranslate\"><span class=\"pre\">item_name</span></code><a class=\"headerlink\" href=\"#change-the-item-name\" title=\"Link to this heading\">#</a></h2>", "a[href=\"notebooks/segmentation.html#view-accepted-neurons-on-a-summary-image\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">4.9. </span>View accepted neurons on a summary image<a class=\"headerlink\" href=\"#view-accepted-neurons-on-a-summary-image\" title=\"Link to this heading\">#</a></h2><p>Now we\u2019re going to display a summary image to plot our segmentation results on top of.</p><p>You can try a variety of these images to see which gives you the clearest picture of your neurons at their most active state.</p>", "a[href=\"notebooks/batch_helpers.html#add-a-comment\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">2.4. </span>Add a <code class=\"docutils literal notranslate\"><span class=\"pre\">comment</span></code><a class=\"headerlink\" href=\"#add-a-comment\" title=\"Link to this heading\">#</a></h2>", "a[href=\"notebooks/collation.html#z-stack-alignment\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">5.4. </span>z-stack alignment<a class=\"headerlink\" href=\"#z-stack-alignment\" title=\"Link to this heading\">#</a></h2>", "a[href=\"notebooks/assembly.html#scanreader-object\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">1.3. </span>scanreader object<a class=\"headerlink\" href=\"#scanreader-object\" title=\"Link to this heading\">#</a></h2><p>When indexing the scanreader, a numpy array is returned with dimensions <code class=\"docutils literal notranslate\"><span class=\"pre\">[field,</span> <span class=\"pre\">T,</span> <span class=\"pre\">z,</span> <span class=\"pre\">y,</span> <span class=\"pre\">x]</span></code></p>", "a[href=\"notebooks/assembly.html#path-to-save-your-files\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">1.4. </span>Path to save your files<a class=\"headerlink\" href=\"#path-to-save-your-files\" title=\"Link to this heading\">#</a></h2><p>We can save the assembled image or individual ROIs to disk. The currently supported file extensions are <code class=\"docutils literal notranslate\"><span class=\"pre\">.tiff</span></code> (for now).</p>", "a[href=\"notebooks/motion_correction.html#registration-parameters\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">3.2. </span>Registration parameters<a class=\"headerlink\" href=\"#registration-parameters\" title=\"Link to this heading\">#</a></h2><p>The parameters are passed <strong>directly</strong> to <code class=\"docutils literal notranslate\"><span class=\"pre\">caiman</span></code>, this means you need to use the same exact names for the parameters and you can use all the parameters that you can use with <code class=\"docutils literal notranslate\"><span class=\"pre\">caiman</span></code> - because it\u2019s just passing them to <code class=\"docutils literal notranslate\"><span class=\"pre\">caiman</span></code>.</p><p>The parameters dict for a mesmerize batch item must have the following structure. Put all the parameters in a dict under a key called <strong>main</strong>. The <strong>main</strong> dict is then fed directly to <code class=\"docutils literal notranslate\"><span class=\"pre\">caiman</span></code>.</p>", "a[href=\"notebooks/segmentation.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">4. </span>Segmentation<a class=\"headerlink\" href=\"#segmentation\" title=\"Link to this heading\">#</a></h1><p>Extract neuronal locations and planar time-traces.</p>", "a[href=\"notebooks/segmentation.html#extras\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">4.18. </span>Extras<a class=\"headerlink\" href=\"#extras\" title=\"Link to this heading\">#</a></h2>", "a[href=\"notebooks/motion_correction.html#single-plane-registration\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">3.3. </span>Single-plane registration<a class=\"headerlink\" href=\"#single-plane-registration\" title=\"Link to this heading\">#</a></h2><p>See the mesmerize-core <a class=\"reference external\" href=\"https://mesmerize-core.readthedocs.io/en/latest/api/functions.html\">utility docs</a> for more information on batch creation.</p><p>We simple need to:</p>", "a[href=\"notebooks/collation.html#combine-results-of-different-z-planes\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">5.3. </span>Combine results of different z_planes<a class=\"headerlink\" href=\"#combine-results-of-different-z-planes\" title=\"Link to this heading\">#</a></h2>", "a[href=\"notebooks/segmentation.html#what-happened\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">4.10. </span>What happened?<a class=\"headerlink\" href=\"#what-happened\" title=\"Link to this heading\">#</a></h2><p>We see many more neurons than we expect. Why is this?</p><p>Lets check the patches used for CNMF.</p>", "a[href=\"notebooks/assembly.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">1. </span>Image Assembly<a class=\"headerlink\" href=\"#image-assembly\" title=\"Link to this heading\">#</a></h1><p>Raw ScanImage <code class=\"docutils literal notranslate\"><span class=\"pre\">.tiff</span></code> files are saved to disk in an interleaved manner. The general workflow is as follows:</p>", "a[href=\"notebooks/segmentation.html#adjust-quality-metrics-based-on-evaluation-parameters\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">4.17. </span>Adjust quality metrics based on evaluation parameters<a class=\"headerlink\" href=\"#adjust-quality-metrics-based-on-evaluation-parameters\" title=\"Link to this heading\">#</a></h2>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
