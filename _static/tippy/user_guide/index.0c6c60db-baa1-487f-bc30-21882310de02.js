selector_to_html = {"a[href=\"assembly.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">1. </span>Image Assembly<a class=\"headerlink\" href=\"#image-assembly\" title=\"Link to this heading\">#</a></h1><h2><span class=\"section-number\">1.1. </span>Overview<a class=\"headerlink\" href=\"#overview\" title=\"Link to this heading\">#</a></h2><p>Before running motion-correction or segmentation, we need to de-interleave raw <code class=\"docutils literal notranslate\"><span class=\"pre\">.tiff</span></code> files.</p><p>This is done internally with the <a class=\"reference external\" href=\"https://github.com/atlab/scanreader\">scanreader</a>.</p>", "a[href=\"assembly.html#command-line-usage\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">1.5. </span>Command Line Usage<a class=\"headerlink\" href=\"#command-line-usage\" title=\"Link to this heading\">#</a></h2><h3><span class=\"section-number\">1.5.1. </span>Optional Arguments<a class=\"headerlink\" href=\"#optional-arguments\" title=\"Link to this heading\">#</a></h3>", "a[href=\"segmentation.html#cnmf-parameters\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">4.1. </span>CNMF Parameters<a class=\"headerlink\" href=\"#cnmf-parameters\" title=\"Link to this heading\">#</a></h2><p id=\"decay-times\"><a class=\"reference external\" href=\"https://www.janelia.org/jgcamp8-calcium-indicators\">Decay times</a></p>", "a[href=\"registration.html#registration-parameters\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">3.2. </span>Registration Parameters<a class=\"headerlink\" href=\"#registration-parameters\" title=\"Link to this heading\">#</a></h2><p>Parameters for motion correction are fed into <code class=\"docutils literal notranslate\"><span class=\"pre\">CaImAn</span></code> in an object which holds and organizes parameters for registration, segmentation, deconvolution, and pre-processing steps.</p><p>As such, you can put any parameter found in that structure into the parameters dictionary. Only the parameters that apply to registration will be used.</p>", "a[href=\"assembly.html#assembly-benchmarks\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">1.6. </span>Assembly Benchmarks<a class=\"headerlink\" href=\"#assembly-benchmarks\" title=\"Link to this heading\">#</a></h2><p>CPU: 13th Gen Intel(R) Core(TM) i9-13900KS   3.20 GHz\nRAM: 128 GB usable\nOS: Windows 10 Pro, 22H2</p>", "a[href=\"registration.html#registration-results\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">3.3. </span>Registration Results<a class=\"headerlink\" href=\"#registration-results\" title=\"Link to this heading\">#</a></h2><p>Following a registration run, results can be quickly viewed with the help of <a class=\"reference external\" href=\"https://github.com/kushalkolar/mesmerize-viz\">mesmerize-viz</a>.</p>", "a[href=\"assembly.html#overview\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">1.1. </span>Overview<a class=\"headerlink\" href=\"#overview\" title=\"Link to this heading\">#</a></h2><p>Before running motion-correction or segmentation, we need to de-interleave raw <code class=\"docutils literal notranslate\"><span class=\"pre\">.tiff</span></code> files.</p><p>This is done internally with the <a class=\"reference external\" href=\"https://github.com/atlab/scanreader\">scanreader</a>.</p>", "a[href=\"batch_utilities.html#add-a-batch-item\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">2.3. </span>Add a batch item<a class=\"headerlink\" href=\"#add-a-batch-item\" title=\"Link to this heading\">#</a></h2><p>Next, we add an item to the batch.</p><p>A batch item is a combination of:</p>", "a[href=\"batch_utilities.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">2. </span>Batch-Utilities<a class=\"headerlink\" href=\"#batch-utilities\" title=\"Link to this heading\">#</a></h1><p>Before continuing, users should review the <a class=\"reference external\" href=\"https://mesmerize-core.readthedocs.io/en/latest/user_guide.html\">mesmerize-core user guide</a>.</p>", "a[href=\"assembly.html#scanreader\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">1.2. </span>scanreader<a class=\"headerlink\" href=\"#scanreader\" title=\"Link to this heading\">#</a></h2><p>The first thing you need to do is initialize a scan. This is done with <code class=\"docutils literal notranslate\"><span class=\"pre\">read_scan</span></code>.</p>", "a[href=\"segmentation.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">4. </span>Segmentation<a class=\"headerlink\" href=\"#segmentation\" title=\"Link to this heading\">#</a></h1><h2><span class=\"section-number\">4.1. </span>CNMF Parameters<a class=\"headerlink\" href=\"#cnmf-parameters\" title=\"Link to this heading\">#</a></h2><p id=\"decay-times\"><a class=\"reference external\" href=\"https://www.janelia.org/jgcamp8-calcium-indicators\">Decay times</a></p>", "a[href=\"batch_utilities.html#create-a-batch\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">2.2. </span>Create a Batch<a class=\"headerlink\" href=\"#create-a-batch\" title=\"Link to this heading\">#</a></h2><p>See <a class=\"reference external\" href=\"https://mesmerize-core.readthedocs.io/en/latest/api/functions.html#mesmerize_core.load_batch\" title=\"(in mesmerize-core)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">mesmerize_core.load_batch()</span></code></a>, <a class=\"reference external\" href=\"https://mesmerize-core.readthedocs.io/en/latest/api/functions.html#mesmerize_core.create_batch\" title=\"(in mesmerize-core)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">mesmerize_core.create_batch()</span></code></a>,</p>", "a[href=\"registration.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">3. </span>Registration<a class=\"headerlink\" href=\"#registration\" title=\"Link to this heading\">#</a></h1><h2><span class=\"section-number\">3.1. </span>Overview<a class=\"headerlink\" href=\"#overview\" title=\"Link to this heading\">#</a></h2><p>We use <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Image_registration\">image registration</a> to make sure that our neuron in the first frame is in the same spatial location as in frame N throughout the time-series.</p><p>As described in the <a class=\"reference internal\" href=\"batch_utilities.html#batch\"><span class=\"std std-ref\">Batch-Utilities</span></a>, registration can be run on your data by adding an <code class=\"docutils literal notranslate\"><span class=\"pre\">mcorr</span></code> item to the batch with parameters:</p>", "a[href=\"batch_utilities.html#overview\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">2.1. </span>Overview<a class=\"headerlink\" href=\"#overview\" title=\"Link to this heading\">#</a></h2><p>The general workflow is as follows:</p>", "a[href=\"assembly.html#save-your-data\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">1.3. </span>Save your data<a class=\"headerlink\" href=\"#save-your-data\" title=\"Link to this heading\">#</a></h2><p>The scan object returned by <code class=\"docutils literal notranslate\"><span class=\"pre\">read_scan</span></code> can be fed into <a class=\"reference internal\" href=\"../api/index.html#lbm_caiman_python.save_as\" title=\"lbm_caiman_python.save_as\"><span class=\"xref myst py py-func\"><code class=\"docutils literal notranslate\"><span class=\"pre\">save_as</span></code></span></a> to save as a <code class=\"docutils literal notranslate\"><span class=\"pre\">.tiff</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">.zarr</span></code>.</p>", "a[href=\"batch_utilities.html#command-line-usage-overview\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">2.5. </span>Command Line Usage Overview:<a class=\"headerlink\" href=\"#command-line-usage-overview\" title=\"Link to this heading\">#</a></h2><p>*int = integer, 0 1 2 3 etc.\n*algo = mcorr, cnmf, or cnmfe\n*str=a path of some sort. will be fed into pathlib.Path(str).resolve() to expand <code class=\"docutils literal notranslate\"><span class=\"pre\">~</span></code> chars.</p>", "a[href=\"registration.html#id3\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">3.5. </span><strong>Summary and Metrics</strong><a class=\"headerlink\" href=\"#id3\" title=\"Link to this heading\">#</a></h2><p>The registration process generates several key metrics that help assess the quality and accuracy of the motion-correction. These metrics provide insight into how well frames align with the template and the overall stability of the video.</p>", "a[href=\"batch_utilities.html#examples\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">2.6. </span>Examples<a class=\"headerlink\" href=\"#examples\" title=\"Link to this heading\">#</a></h2><p>Chain mcorr and cnmf together:</p>", "a[href=\"registration.html#overview\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">3.1. </span>Overview<a class=\"headerlink\" href=\"#overview\" title=\"Link to this heading\">#</a></h2><p>We use <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Image_registration\">image registration</a> to make sure that our neuron in the first frame is in the same spatial location as in frame N throughout the time-series.</p><p>As described in the <a class=\"reference internal\" href=\"batch_utilities.html#batch\"><span class=\"std std-ref\">Batch-Utilities</span></a>, registration can be run on your data by adding an <code class=\"docutils literal notranslate\"><span class=\"pre\">mcorr</span></code> item to the batch with parameters:</p>", "a[href=\"batch_utilities.html#run-a-batch-item\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">2.4. </span>Run a batch item<a class=\"headerlink\" href=\"#run-a-batch-item\" title=\"Link to this heading\">#</a></h2><p>After adding an item, running the item is as easy as calling <code class=\"docutils literal notranslate\"><span class=\"pre\">row.caiman.run()</span></code>:</p>", "a[href=\"#user-guide\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">User Guide<a class=\"headerlink\" href=\"#user-guide\" title=\"Link to this heading\">#</a></h1><p>This section covers each step in the pipeline, parameters and metadata in more detail.</p>", "a[href=\"registration.html#summary-and-metrics\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">3.4. </span><strong>Summary and Metrics</strong><a class=\"headerlink\" href=\"#summary-and-metrics\" title=\"Link to this heading\">#</a></h2><p>The registration process generates several key metrics that help assess the quality and accuracy of the motion-correction. These metrics provide insight into how well frames align with the template and the overall stability of the video.</p>", "a[href=\"collation.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">5. </span>Collation<a class=\"headerlink\" href=\"#collation\" title=\"Link to this heading\">#</a></h1><p>Placeholder (see the notebook)</p>", "a[href=\"assembly.html#data-preview\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">1.4. </span>Data Preview<a class=\"headerlink\" href=\"#data-preview\" title=\"Link to this heading\">#</a></h2><p>To get a rough idea of the quality of your extracted timeseries, we can create a fastplotlib visualization to preview traces of individual pixels.</p><p>Here, we simply click on any pixel in the movie, and we get a 2D trace (or \u201ctemporal component\u201d as used in this field) of the pixel through the course of the movie:</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
